apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-builder
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-builder
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-builder
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      serviceAccount: drycc-builder
      initContainers:
      - name: drycc-builder-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - netcat
          - -v
          - -u
          - $(DRYCC_STORAGE_ENDPOINT),$(DRYCC_CONTROLLER_URL)
        {{- include "builder.envs" . | indent 8 }}
      containers:
      - name: drycc-builder
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/builder:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- end }}
        ports:
          - containerPort: 2223
            name: ssh
          - containerPort: 8092
            name: healthsrv
        {{- include "builder.envs" . | indent 8 }}
        {{- with index .Values "resources" }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8092
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8092
          initialDelaySeconds: 30
          timeoutSeconds: 1
        {{- end }}
        volumeMounts:
          - name: controller-creds
            mountPath: /var/run/secrets/drycc/controller
            readOnly: true
          - name: imagebuilder-config
            mountPath: /etc/imagebuilder
            readOnly: true
          - name: builder-ssh-private-keys
            mountPath: /var/run/secrets/drycc/builder/ssh
            readOnly: true
      volumes:
        - name: controller-creds
          secret:
            secretName: controller-creds
        - name: imagebuilder-config
          configMap:
            name: imagebuilder-config
        - name: builder-ssh-private-keys
          secret:
            secretName: builder-ssh-private-keys
